# ===============================================================
# DEFAULT PROFILE (for local development)
# ===============================================================
spring:
  application:
    name: audiance-backend

  profiles:
    active: ${SPRING_PROFILE:local}

  datasource:
    url: ${DATABASE_URL:jdbc:h2:mem:audiancedb}
    username: ${DB_USERNAME:sa}
    password: ${DB_PASSWORD:}
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop # Resets DB on each start (local only)
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true

  h2:
    console:
      enabled: true
      path: /h2-console

  security:
    oauth2:
      client:
        registration:
          spotify:
            client-id: ${SPOTIFY_CLIENT_ID}
            client-secret: ${SPOTIFY_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: ${SPOTIFY_REDIRECT_URI:{baseUrl}/login/oauth2/code/{registrationId}}
            scope:
              - user-read-email
              - user-read-private
              - user-top-read
              - playlist-modify-public
              - playlist-modify-private
            provider:
              spotify:
                authorization-uri: https://accounts.spotify.com/authorize
                token-uri: https://accounts.spotify.com/api/token
                user-info-uri: https://api.spotify.com/v1/me
                user-name-attribute: id

# ===============================================================
# Custom Application Properties
# ===============================================================
app:
  fastapi:
    url: ${FASTAPI_URL:http://localhost:8000}
    timeout: 30000

  jwt:
    secret: ${JWT_SECRET:dummy-local-jwt-secret-for-dev-use-only-12345}
    expiration: 86400000 # 24 hours

  frontend:
    url: ${FRONTEND_URL:http://localhost:3000}

  spotify:
    api-url: https://api.spotify.com/v1
    accounts-url: https://accounts.spotify.com/api
    client-id: ${SPOTIFY_CLIENT_ID}
    client-secret: ${SPOTIFY_CLIENT_SECRET}
    top-artists-cache-hours: 24

  ai:
    model: meta-llama/Llama-3.1-8B-Instruct
    huggingface-token: ${HUGGINGFACE_TOKEN}
    story-mode-threshold: 100
    max-scenes: 6

  available:
    genres: hip-hop,rnb,pop,afrobeats,dance,indie,rock,electronic,jazz,soul

  playlist:
    min-tracks-per-scene: 3
    max-tracks-per-scene: 10
    default-tracks-per-scene: 5
    max-total-tracks: 50

audiance:
  security:
    encryptor-key: ${ENCRYPTOR_KEY:local_encryptkey16}

server:
  port: ${PORT:8080}
  error:
    include-message: always
    include-binding-errors: always

logging:
  level:
    com.audience: DEBUG
    org.hibernate.SQL: DEBUG
    org.springframework.security: INFO
    org.springframework.web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n"

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method

---

# ===============================================================
# PRODUCTION PROFILE
# ===============================================================
spring:
  config:
    activate:
      on-profile: production

  datasource:
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 5
      minimum-idle: 2
      idle-timeout: 30000
      max-lifetime: 600000
      connection-timeout: 30000

  jpa:
    show-sql: false
    hibernate:
      ddl-auto: update # Keep data, safe schema evolution
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        jdbc.lob.non_contextual_creation: true

  h2:
    console:
      enabled: false

server:
  error:
    include-message: never
    include-binding-errors: never

springdoc:
  swagger-ui:
    enabled: true

logging:
  level:
    com.audience: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: WARN
    org.springframework.web: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n"

app:
  fastapi:
    url: ${FASTAPI_URL:https://audiance-fastapi.onrender.com}
    timeout: 30000

  jwt:
    expiration: 86400000 # keep same 24hr session

  ai:
    story-mode-threshold: 80

audiance:
  security:
    encryptor-key: ${ENCRYPTOR_KEY:prod_encryptkey16}

